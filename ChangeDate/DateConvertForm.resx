<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /wA=
</value>
  </data>
</root>